<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.shopec.core.ml.dao.LockBillingSchemeDao">

<resultMap type="LockBillingScheme" id="LockBillingScheme">
	<id column="LOCK_SCHEME_NO" property="lockSchemeNo" javaType="java.lang.String" jdbcType="VARCHAR"/>
	<result column="LOCK_SCHEME_NAME" property="lockSchemeName" javaType="java.lang.String" jdbcType="VARCHAR"/>
	<result column="FREE_TIME" property="freeTime" javaType="java.lang.Integer" jdbcType="INTEGER"/>
	<result column="UNIT_TIME" property="unitTime" javaType="java.lang.Integer" jdbcType="INTEGER"/>
	<result column="OVERTIME_PRICE" property="overtimePrice" javaType="java.lang.Double" jdbcType="DOUBLE"/>
	<result column="STATUS" property="status" javaType="java.lang.Integer" jdbcType="TINYINT"/>
	<result column="CREATE_TIME" property="createTime" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
	<result column="UPDATE_TIME" property="updateTime" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
	<result column="OPERATOR_TYPE" property="operatorType" javaType="java.lang.Integer" jdbcType="TINYINT"/>
	<result column="OPERATOR_ID" property="operatorId" javaType="java.lang.String" jdbcType="VARCHAR"/>
</resultMap>


<!-- 全部字段，一般用于明细查询 -->
<sql id="AllColumnlist">
LOCK_SCHEME_NO,LOCK_SCHEME_NAME,FREE_TIME,UNIT_TIME,OVERTIME_PRICE,STATUS,CREATE_TIME,
UPDATE_TIME,OPERATOR_TYPE,OPERATOR_ID
</sql>

<!-- 常见字段，一般用于列表查询，可能不包含备注之类的字段 -->
<sql id="CommonColumnlist">
LOCK_SCHEME_NO,LOCK_SCHEME_NAME,FREE_TIME,UNIT_TIME,OVERTIME_PRICE,STATUS,CREATE_TIME,
UPDATE_TIME,OPERATOR_TYPE,OPERATOR_ID
</sql>

<insert id="add" parameterType="LockBillingScheme" useGeneratedKeys="true" keyProperty="lockSchemeNo">
	insert into LOCK_BILLING_SCHEME(
		<if test="lockSchemeNo!=null">
		LOCK_SCHEME_NO,
		</if>
		LOCK_SCHEME_NAME,
		FREE_TIME,
		UNIT_TIME,
		OVERTIME_PRICE,
		STATUS,
		CREATE_TIME,
		UPDATE_TIME,
		OPERATOR_TYPE,
		OPERATOR_ID
	) values (
		<if test="lockSchemeNo!=null">
		#{lockSchemeNo,jdbcType = VARCHAR},
		</if>
		#{lockSchemeName,jdbcType = VARCHAR},
		#{freeTime,jdbcType = INTEGER},
		#{unitTime,jdbcType = INTEGER},
		#{overtimePrice,jdbcType = DOUBLE},
		#{status,jdbcType = TINYINT},
		#{createTime,jdbcType = TIMESTAMP},
		#{updateTime,jdbcType = TIMESTAMP},
		#{operatorType,jdbcType = TINYINT},
		#{operatorId,jdbcType = VARCHAR}
	)
</insert>

<update id="update" parameterType="LockBillingScheme">
	update LOCK_BILLING_SCHEME 
	<set>
		<if test="lockSchemeName!=null and lockSchemeName!=''">
			LOCK_SCHEME_NAME=#{lockSchemeName,jdbcType = VARCHAR},
		</if>
		<if test="freeTime!=null and freeTime!=''">
			FREE_TIME=#{freeTime,jdbcType = INTEGER},
		</if>
		<if test="unitTime!=null and unitTime!=''">
			UNIT_TIME=#{unitTime,jdbcType = INTEGER},
		</if>
		<if test="overtimePrice!=null ">
			OVERTIME_PRICE=#{overtimePrice,jdbcType = DOUBLE},
		</if>
		<if test="status!=null ">
			STATUS=#{status,jdbcType = TINYINT},
		</if>
		<if test="createTime!=null ">
			CREATE_TIME=#{createTime,jdbcType = TIMESTAMP},
		</if>
		<if test="updateTime!=null ">
			UPDATE_TIME=#{updateTime,jdbcType = TIMESTAMP},
		</if>
		<if test="operatorType!=null ">
			OPERATOR_TYPE=#{operatorType,jdbcType = TINYINT},
		</if>
		<if test="operatorId!=null and operatorId!=''">
			OPERATOR_ID=#{operatorId,jdbcType = VARCHAR},
		</if>
	</set>
	<where>
		AND LOCK_SCHEME_NO=#{lockSchemeNo}
	</where>
</update>

<delete id="delete">
	delete from LOCK_BILLING_SCHEME 
	<where>
		LOCK_SCHEME_NO=#{0}
	</where>
</delete>

<select id="get" resultMap="LockBillingScheme">
	select <include refid="AllColumnlist"/> from LOCK_BILLING_SCHEME
	<where>
		LOCK_SCHEME_NO=#{0}
	</where>
</select>

<select id="getByIds" resultMap="LockBillingScheme">
	select <include refid="AllColumnlist"/> from LOCK_BILLING_SCHEME
	<where>
		LOCK_SCHEME_NO in <foreach item="item" index="index" collection="array" open="(" separator="," close=")">#{item}</foreach>
	</where>
</select>

<select id="count" parameterType="Query" resultType="Long">
	select count(LOCK_SCHEME_NO) from LOCK_BILLING_SCHEME 
	<where>
	<include refid="listCommonWhere"/>
	</where>
</select>

<select id="queryAll" parameterType="Query" resultMap="LockBillingScheme">
	select <include refid="CommonColumnlist"/> from LOCK_BILLING_SCHEME 
	<where>
	<include refid="listCommonWhere"/>
	</where>
</select>

<select id="pageList" parameterType="Query" resultMap="LockBillingScheme">
	select <include refid="CommonColumnlist"/> from LOCK_BILLING_SCHEME
	<where>
	 <include refid="listCommonWhere"/>
	</where>
	 order by UPDATE_TIME desc
	<![CDATA[LIMIT #{rowIndex},#{pageSize} ]]>
</select>


<sql id="listCommonWhere">
	<if test="q!=null">
		<if test="q.lockSchemeNo!=null and q.lockSchemeNo!=''">
			AND LOCK_SCHEME_NO=#{q.lockSchemeNo}
		</if>
		<if test="q.lockSchemeName!=null and q.lockSchemeName!=''">
			AND LOCK_SCHEME_NAME like '%' #{q.lockSchemeName} '%'
		</if>
		<if test="q.freeTime!=null and q.freeTime!=''">
			AND FREE_TIME=#{q.freeTime}
		</if>
		<if test="q.unitTime!=null and q.unitTime!=''">
			AND UNIT_TIME=#{q.unitTime}
		</if>
		<if test="q.overtimePrice!=null ">
			AND OVERTIME_PRICE=#{q.overtimePrice}
		</if>
		<if test="q.status!=null ">
			AND STATUS=#{q.status}
		</if>
		<if test="q.createTime!=null ">
			AND CREATE_TIME=#{q.createTime}
		</if>
		<if test="q.createTimeStart!=null">
		<![CDATA[	AND CREATE_TIME>=#{q.createTimeStart}  ]]>
		</if>
		<if test="q.createTimeEnd!=null">
		<![CDATA[	AND CREATE_TIME<#{q.createTimeEnd}   ]]>
		</if>
		<if test="q.updateTime!=null ">
			AND UPDATE_TIME=#{q.updateTime}
		</if>
		<if test="q.updateTimeStart!=null">
		<![CDATA[	AND UPDATE_TIME>=#{q.updateTimeStart}  ]]>
		</if>
		<if test="q.updateTimeEnd!=null">
		<![CDATA[	AND UPDATE_TIME<#{q.updateTimeEnd}   ]]>
		</if>
		<if test="q.operatorType!=null ">
			AND OPERATOR_TYPE=#{q.operatorType}
		</if>
		<if test="q.operatorId!=null and q.operatorId!=''">
			AND OPERATOR_ID=#{q.operatorId}
		</if>
	</if>
</sql>

</mapper>
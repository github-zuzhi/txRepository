<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.shopec.core.member.dao.MemberBalanceDao">

<resultMap type="MemberBalance" id="MemberBalance">
	<id column="MEMBER_NO" property="memberNo" javaType="java.lang.String" jdbcType="VARCHAR"/>
	<result column="BALANCE" property="balance" javaType="java.lang.Double" jdbcType="DOUBLE"/>
	<result column="IS_FREEZE" property="isFreeze" javaType="java.lang.Integer" jdbcType="TINYINT"/>
	<result column="FREEZE_PERSON" property="freezePerson" javaType="java.lang.String" jdbcType="VARCHAR"/>
	<result column="FREEZE_REASON" property="freezeReason" javaType="java.lang.String" jdbcType="VARCHAR"/>
	<result column="FREEZE_TIME" property="freezeTime" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
	<result column="CREATE_TIME" property="createTime" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
	<result column="UPDATE_TIME" property="updateTime" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
	<result column="OPERATOR_TYPE" property="operatorType" javaType="java.lang.Integer" jdbcType="TINYINT"/>
	<result column="OPERATOR_ID" property="operatorId" javaType="java.lang.String" jdbcType="VARCHAR"/>
</resultMap>

<!-- 全部字段，一般用于明细查询 -->
<sql id="AllColumnlist">
MEMBER_NO,BALANCE,FREEZE_PERSON,FREEZE_REASON,FREEZE_TIME,IS_FREEZE,CREATE_TIME,UPDATE_TIME,OPERATOR_ID,OPERATOR_TYPE
</sql>

<!-- 常见字段，一般用于列表查询，可能不包含备注之类的字段 -->
<sql id="CommonColumnlist">
MEMBER_NO,BALANCE,IS_FREEZE,UPDATE_TIME
</sql>

<insert id="add" parameterType="MemberBalance" useGeneratedKeys="true" keyProperty="memberNo">
	insert into T_MEMBER_BALANCE(
		<if test="memberNo!=null">
		MEMBER_NO,
		</if>
		BALANCE,
		IS_FREEZE,
		FREEZE_PERSON,
		FREEZE_REASON,
		FREEZE_TIME,
		CREATE_TIME,
		UPDATE_TIME,
		OPERATOR_ID,
		OPERATOR_TYPE
	) values (
		<if test="memberNo!=null">
		#{memberNo,jdbcType = VARCHAR},
		</if>
		#{balance,jdbcType = DOUBLE},
		#{isFreeze,jdbcType = TINYINT},
		#{freezePerson,jdbcType = VARCHAR},
		#{freezeReason,jdbcType = VARCHAR},
		#{freezeTime,jdbcType = TIMESTAMP},
		#{createTime,jdbcType = TIMESTAMP},
		#{updateTime,jdbcType = TIMESTAMP},
		#{operatorType,jdbcType = TINYINT},
		#{operatorId,jdbcType = VARCHAR}
	)
</insert>

<update id="update" parameterType="MemberBalance">
	update t_member_balance 
	<set>
		<if test="balance!=null">
			BALANCE=#{balance,jdbcType = DOUBLE},
		</if>
		<if test="isFreeze!=null">
			IS_FREEZE=#{isFreeze,jdbcType = TINYINT},
		</if>
		
		<if test="freezePerson!=null and freezePerson!=''">
			FREEZE_PERSON=#{freezePerson,jdbcType = VARCHAR},
		</if>
		<if test="freezeReason!=null and freezeReason!=''">
			FREEZE_REASON=#{freezeReason,jdbcType = VARCHAR},
		</if>
		<if test="freezeTime!=null">
			FREEZE_TIME=#{freezeTime,jdbcType = TIMESTAMP},
		</if>
		<if test="createTime!=null ">
			CREATE_TIME=#{createTime,jdbcType = TIMESTAMP},
		</if>
		<if test="updateTime!=null ">
			UPDATE_TIME=#{updateTime,jdbcType = TIMESTAMP},
		</if>
		<if test="operatorType!=null ">
			OPERATOR_TYPE=#{operatorType,jdbcType = TINYINT},
		</if>
		<if test="operatorId!=null and operatorId!=''">
			OPERATOR_ID=#{operatorId,jdbcType = VARCHAR},
		</if>
	</set>
	<where>
		AND MEMBER_NO=#{memberNo}
	</where>
</update>

<delete id="delete">
	delete from t_member_balance 
	<where>
		MEMBER_NO=#{0}
	</where>
</delete>

<select id="get" resultMap="MemberBalance">
	select <include refid="AllColumnlist"/> from t_member_balance
	<where>
		MEMBER_NO=#{0}
	</where>
</select>
   
<select id="getByIds" resultMap="MemberBalance">
	select <include refid="AllColumnlist"/> from t_member_balance
	<where>
		MEMBER_NO in <foreach item="item" index="index" collection="array" open="(" separator="," close=")">#{item}</foreach>
	</where>
</select>

<select id="count" parameterType="Query" resultType="Long">
	select count(MEMBER_NO) from t_member_balance 
	<where>
	<include refid="listCommonWhere"/>
	</where>
</select>

<select id="queryAll" parameterType="Query" resultMap="MemberBalance">
	select <include refid="CommonColumnlist"/> from t_member_balance 
	<where>
	<include refid="listCommonWhere"/>
	</where>
	ORDER BY UPDATE_TIME DESC, CREATE_TIME DESC
</select>

<select id="pageList" parameterType="Query" resultMap="MemberBalance">
	select <include refid="CommonColumnlist"/> from t_member_balance
	<where>
	 <include refid="listCommonWhere"/>
	</where>
	ORDER BY UPDATE_TIME DESC,CREATE_TIME DESC
	<![CDATA[LIMIT #{rowIndex},#{pageSize} ]]>
</select>

<sql id="listCommonWhere">
	<if test="q!=null">
		<if test="q.memberNo!=null and q.memberNo!=''">
			AND MEMBER_NO like CONCAT('%',#{q.memberNo},'%')
		</if>
		<if test="q.isFreeze!=null">
			AND IS_FREEZE=#{q.isFreeze}
		</if>
		<if test="q.createTimeStart!=null">
		<![CDATA[	AND CREATE_TIME>=#{q.createTimeStart}  ]]>
		</if>
		<if test="q.createTimeEnd!=null">
		<![CDATA[	AND CREATE_TIME<#{q.createTimeEnd}   ]]>
		</if>
		<if test="q.updateTime!=null ">
			AND UPDATE_TIME=#{q.updateTime}
		</if>
		<if test="q.updateTimeStart!=null">
		<![CDATA[	AND UPDATE_TIME>=#{q.updateTimeStart}  ]]>
		</if>
		<if test="q.updateTimeEnd!=null">
		<![CDATA[	AND UPDATE_TIME<#{q.updateTimeEnd}   ]]>
		</if>
		<if test="q.operatorType!=null ">
			AND OPERATOR_TYPE=#{q.operatorType}
		</if>
		<if test="q.operatorId!=null and q.operatorId!=''">
			AND OPERATOR_ID=#{q.operatorId}
		</if>
	</if>
</sql>
</mapper>

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.shopec.core.member.dao.MemberBalanceRecordDao">

<resultMap type="MemberBalanceRecord" id="MemberBalanceRecord">
	<id column="ID" property="id" javaType="java.lang.String" jdbcType="VARCHAR"/>
	<result column="MEMBER_NO" property="memberNo" javaType="java.lang.String" jdbcType="VARCHAR"/>
	<result column="TYPE" property="type" javaType="java.lang.Integer" jdbcType="TINYINT"/>
	<result column="TRNASACTION_AMOUNT" property="trnasactionAmount" javaType="java.lang.Double" jdbcType="DOUBLE"/>
	<result column="ORIGINAL_AMOUNT" property="originalAmount" javaType="java.lang.Double" jdbcType="DOUBLE"/>
	<result column="BALANCE" property="balance" javaType="java.lang.Double" jdbcType="DOUBLE"/>
	<result column="ORDER_NO" property="orderNo" javaType="java.lang.String" jdbcType="VARCHAR"/>
	<result column="PAYFLOW_NO" property="payflowNo" javaType="java.lang.String" jdbcType="VARCHAR"/>
	<result column="CREATE_TIME" property="createTime" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
	<result column="UPDATE_TIME" property="updateTime" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
	<result column="OPERATOR_TYPE" property="operatorType" javaType="java.lang.Integer" jdbcType="TINYINT"/>
	<result column="OPERATOR_ID" property="operatorId" javaType="java.lang.String" jdbcType="VARCHAR"/>
</resultMap>

<!-- 全部字段，一般用于明细查询 -->
<sql id="AllColumnlist">
Id,MEMBER_NO,TYPE,TRNASACTION_AMOUNT,ORIGINAL_AMOUNT,BALANCE,
ORDER_NO,PAYFLOW_NO,CREATE_TIME,UPDATE_TIME,OPERATOR_ID,OPERATOR_TYPE
</sql>

<!-- 常见字段，一般用于列表查询，可能不包含备注之类的字段 -->
<sql id="CommonColumnlist">
ID,MEMBER_NO,TYPE,TRNASACTION_AMOUNT,ORIGINAL_AMOUNT,BALANCE,
ORDER_NO,CREATE_TIME
</sql>

<insert id="add" parameterType="MemberBalanceRecord" useGeneratedKeys="true" keyProperty="id">
	insert into T_MEMBER_BALANCE_RECORD(
		<if test="memberNo!=null">
		ID,
		</if>
		MEMBER_NO,
		TYPE,
		TRNASACTION_AMOUNT,
		ORIGINAL_AMOUNT,
		BALANCE,
		ORDER_NO,
		PAYFLOW_NO,
		CREATE_TIME,
		UPDATE_TIME,
		OPERATOR_ID,
		OPERATOR_TYPE
	) values (
		<if test="memberNo!=null">
		#{id,jdbcType = VARCHAR},
		</if>
		#{memberNo,jdbcType = VARCHAR},
		#{type,jdbcType = TINYINT},
		#{trnasactionAmount,jdbcType = DOUBLE},
		#{originalAmount,jdbcType = DOUBLE},
		#{balance,jdbcType = DOUBLE},
		#{orderNo,jdbcType = VARCHAR},
		#{payflowNo,jdbcType = VARCHAR},
		#{createTime,jdbcType = TIMESTAMP},
		#{updateTime,jdbcType = TIMESTAMP},
		#{operatorType,jdbcType = TINYINT},
		#{operatorId,jdbcType = VARCHAR}
	)
</insert>

<update id="update" parameterType="MemberBalanceRecord">
	update t_member_balance_record 
	<set>
		<if test="memberNo!=null and memberNo!=''">
			MEMBER_NO=#{memberNo,jdbcType = VARCHAR},
		</if>
		<if test="type!=null and type!=''">
			TYPE=#{type,jdbcType = TINYINT},
		</if>
		<if test="trnasactionAmount!=null and trnasactionAmount!=''">
			BATRNASACTION_AMOUNTLANCE=#{trnasactionAmount,jdbcType = DOUBLE},
		</if>
		<if test="originalAmount!=null and originalAmount!=''">
			ORIGINAL_AMOUNT=#{originalAmount,jdbcType = DOUBLE},
		</if>
		<if test="balance!=null and balance!=''">
			BALANCE=#{BALANCE,jdbcType = DOUBLE},
		</if>
		<if test="orderNo!=null and orderNo!=''">
			ORDER_NO=#{orderNo,jdbcType = VARCHAR},
		</if>
		<if test="payflowNo!=null and payflowNo!=''">
			PAYFLOW_NO=#{payflowNo,jdbcType = VARCHAR},
		</if>
		<if test="createTime!=null ">
			CREATE_TIME=#{createTime,jdbcType = TIMESTAMP},
		</if>
		<if test="updateTime!=null ">
			UPDATE_TIME=#{updateTime,jdbcType = TIMESTAMP},
		</if>
		<if test="operatorType!=null ">
			OPERATOR_TYPE=#{operatorType,jdbcType = TINYINT},
		</if>
		<if test="operatorId!=null and operatorId!=''">
			OPERATOR_ID=#{operatorId,jdbcType = VARCHAR},
		</if>
	</set>
	<where>
		AND ID=#{id}
	</where>
</update>

<delete id="delete">
	delete from t_member_balance_record 
	<where>
		id=#{0}
	</where>
</delete>

<select id="get" resultMap="MemberBalanceRecord">
	select <include refid="AllColumnlist"/> from t_member_balance_record
	<where>
		id=#{0}
	</where>
</select>
   
<select id="getByIds" resultMap="MemberBalanceRecord">
	select <include refid="AllColumnlist"/> from t_member_balance_record
	<where>
		id in <foreach item="item" index="index" collection="array" open="(" separator="," close=")">#{item}</foreach>
	</where>
</select>

<select id="count" parameterType="Query" resultType="Long">
	select count(ID) from t_member_balance_record 
	<where>
	<include refid="listCommonWhere"/>
	</where>
</select>

<select id="queryAll" parameterType="Query" resultMap="MemberBalanceRecord">
	select <include refid="CommonColumnlist"/> from t_member_balance_record 
	<where>
	<include refid="listCommonWhere"/>
	</where>
	ORDER BY CREATE_TIME DESC
</select>

<select id="pageList" parameterType="Query" resultMap="MemberBalanceRecord">
	select <include refid="CommonColumnlist"/> from t_member_balance_record
	<where>
	 <include refid="listCommonWhere"/>
	</where>
	ORDER BY CREATE_TIME DESC
	<![CDATA[LIMIT #{rowIndex},#{pageSize} ]]>
</select>

<sql id="listCommonWhere">
	<if test="q!=null">
		<if test="q.id!=null and q.id!=''">
			AND ID=#{q.id}
		</if>
		<if test="q.memberNo!=null and q.memberNo!=''">
			AND MEMBER_NO  like CONCAT('%',#{q.memberNo},'%')
		</if>
		<if test="q.type!=null and q.type!=''">
			AND TYPE=#{q.type}
		</if>
		<if test="q.createTimeStart!=null">
		<![CDATA[	AND CREATE_TIME>=#{q.createTimeStart}  ]]>
		</if>
		<if test="q.createTimeEnd!=null">
		<![CDATA[	AND CREATE_TIME<#{q.createTimeEnd}   ]]>
		</if>
		<if test="q.updateTime!=null ">
			AND UPDATE_TIME=#{q.updateTime}
		</if>
		<if test="q.updateTimeStart!=null">
		<![CDATA[	AND UPDATE_TIME>=#{q.updateTimeStart}  ]]>
		</if>
		<if test="q.updateTimeEnd!=null">
		<![CDATA[	AND UPDATE_TIME<#{q.updateTimeEnd}   ]]>
		</if>
		<if test="q.operatorType!=null ">
			AND OPERATOR_TYPE=#{q.operatorType}
		</if>
		<if test="q.operatorId!=null and q.operatorId!=''">
			AND OPERATOR_ID=#{q.operatorId}
		</if>
	</if>
</sql>
</mapper>

<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:tool="http://www.springframework.org/schema/tool"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
  		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/tool http://www.springframework.org/schema/tool/spring-tool-3.1.xsd
  		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
  		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
  		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">
	
	<!--################################## redis Start ##################################-->
	
	<!-- jedis对象池配置 -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<!-- <property name="maxActive" value="${redis.pool.maxActive}"/>
		<property name="maxIdle" value="${redis.pool.maxIdle}"/>
		<property name="maxWait" value="${redis.pool.maxWait}"/>
		<property name="testOnBorrow" value="${redis.pool.testOnBorrow}"/> -->
	</bean>
	<!-- 配置主redis 服务器 -->
	<bean id="jedisPool" class="redis.clients.jedis.JedisPool">
		<constructor-arg index="0" ref="jedisPoolConfig" />
		<constructor-arg index="1" value="${redis.ip}"/>
		<constructor-arg index="2" value="${redis.port}" type="int"/>
		<constructor-arg index="3" value="${redis.timeout}" type="int"/>
		<constructor-arg index="4" value="${redis.password}"/>
	</bean>
	<!-- jedis服务器配置 (可以配多台从服务器)-->
<!-- 	<bean id="jedisShardInfo1" class="redis.clients.jedis.JedisShardInfo">
		<constructor-arg index="0" value="${redis.ip}"/>
		<constructor-arg index="1" value="${redis.port}"/>
	</bean>
	<bean id="jedisShardInfo2" class="redis.clients.jedis.JedisShardInfo">
		<constructor-arg index="0" value="${redis.shard.ip}"/>
		<constructor-arg index="1" value="${redis.shard.port}"/>
	</bean> -->
	<!-- jedis shard pool配置(共享从分布式) -->
<!-- 	<bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool">
		<constructor-arg index="0" ref="jedisPoolConfig"/>
		<constructor-arg index="1">
			<list>
				<ref bean="jedisShardInfo1"/>
				<ref bean="jedisShardInfo2"/>
			</list>
		</constructor-arg>
	</bean> -->
	<!-- 返回 IRedisUtil 接口的实例  -->
	<bean id="redisUtil" class="cn.com.shopec.common.cache.redis.RedisUtil">
		<property name="jedisPool" ref="jedisPool"></property>
		<!-- <property name="shardedJedisPool" ref="shardedJedisPool"></property> -->
	</bean>
	
	<!--################################## redis end ####################################-->
</beans>